{
    "swagger": "2.0",
    "info": {
        "description": "GoClone super app API",
        "title": "GoClone API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/accounts": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve wallet balance",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get latest available balance from an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Register a new wallet account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create a new wallet account",
                "parameters": [
                    {
                        "description": "Created account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/accounts/:account_id": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update wallet account in this case the name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update account detail e.g. name",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated account name",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/accounts/:account_id/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get Account detail, the name, balance and user id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get account detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/accounts/:account_id/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all latest. transaction from single account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get latest transactions from account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Account"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/drivers/available": {
            "get": {
                "description": "Retrieve all available drivers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "List all available drivers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.DriverProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/drivers/location": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update location of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Update driver location by ID",
                "parameters": [
                    {
                        "description": "Updated driver current location",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.UpdateDriverLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.DriverProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/drivers/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get driver profile information for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Get driver profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.DriverProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorAuth"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorNotFound"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Update driver by ID",
                "parameters": [
                    {
                        "description": "Updated driver profile",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.UpdateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.DriverProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorNotFound"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "responses": {}
            }
        },
        "/drivers/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update status of a driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Update driver status by ID",
                "parameters": [
                    {
                        "description": "Updated driver status",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.UpdateDriverStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.DriverProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorNotFound"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/public/drivers": {
            "get": {
                "description": "Retrieve all registered drivers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "List all drivers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.DriverProfile"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Register a new driver account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Create a new driver",
                "parameters": [
                    {
                        "description": "Driver info",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/validator.CreateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/utils.APISuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.DriverProfile"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/ErrorResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/utils.ErrorDetail"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/utils.ErrorDetail"
                },
                "message": {
                    "type": "string",
                    "example": "the model struct not found"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "models.Account": {
            "type": "object",
            "properties": {
                "account_type": {
                    "$ref": "#/definitions/models.AccountType"
                },
                "balance": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "qr_codes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.QrCode"
                    }
                },
                "received_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transaction"
                    }
                },
                "sent_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transaction"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.AccountType": {
            "type": "string",
            "enum": [
                "main_balance",
                "points"
            ],
            "x-enum-varnames": [
                "MainBalance",
                "Points"
            ]
        },
        "models.DriverProfile": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_location": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "license_number": {
                    "type": "string"
                },
                "license_picture_url": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "status": {
                    "description": "offline online suspend",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.DriverStatus"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vehicle_plate": {
                    "type": "string"
                },
                "vehicle_type": {
                    "$ref": "#/definitions/models.VehicleType"
                }
            }
        },
        "models.DriverStatus": {
            "type": "string",
            "enum": [
                "offline",
                "online",
                "suspended",
                "sending"
            ],
            "x-enum-varnames": [
                "Offline",
                "Online",
                "Suspended",
                "Sending"
            ]
        },
        "models.QrCode": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_used": {
                    "type": "boolean"
                },
                "receiver_account_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "models.ServiceType": {
            "type": "string",
            "enum": [
                "food",
                "ride",
                "none"
            ],
            "x-enum-comments": {
                "ServiceNone": "for regular transfers"
            },
            "x-enum-descriptions": [
                "for regular transfers"
            ],
            "x-enum-varnames": [
                "ServiceFood",
                "ServiceRide",
                "ServiceNone"
            ]
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/models.TransactionCategory"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "qr_code": {
                    "$ref": "#/definitions/models.QrCode"
                },
                "qr_code_id": {
                    "type": "integer"
                },
                "receiver_account_id": {
                    "type": "integer"
                },
                "sender_account_id": {
                    "type": "integer"
                },
                "service_id": {
                    "description": "optional because it might be just a transfer // this could be ride.id, order.id (comes from food)",
                    "type": "integer"
                },
                "service_type": {
                    "$ref": "#/definitions/models.ServiceType"
                },
                "status": {
                    "$ref": "#/definitions/models.TransactionStatus"
                },
                "type": {
                    "$ref": "#/definitions/models.TransactionType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TransactionCategory": {
            "type": "string",
            "enum": [
                "food",
                "transport",
                "bills",
                "entertainment",
                "transfer",
                "other"
            ],
            "x-enum-comments": {
                "TransferCat": "for example moving balance from 1 to another user"
            },
            "x-enum-descriptions": [
                "for example moving balance from 1 to another user"
            ],
            "x-enum-varnames": [
                "Food",
                "Transport",
                "Bills",
                "Entertainment",
                "TransferCat",
                "Other"
            ]
        },
        "models.TransactionStatus": {
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed",
                "cancelled"
            ],
            "x-enum-varnames": [
                "TransactionPending",
                "TransactionCompleted",
                "TransactionFailed",
                "TransactionCancelled"
            ]
        },
        "models.TransactionType": {
            "type": "string",
            "enum": [
                "payment",
                "transfer",
                "topup",
                "cashback"
            ],
            "x-enum-varnames": [
                "Payment",
                "Transfer",
                "Topup",
                "Cashback"
            ]
        },
        "models.VehicleType": {
            "type": "string",
            "enum": [
                "car",
                "motorcycle"
            ],
            "x-enum-varnames": [
                "Car",
                "MotorCycle"
            ]
        },
        "utils.APISuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "utils.ErrorAuth": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "401"
                },
                "message": {
                    "type": "string",
                    "example": "need jwt"
                },
                "type": {
                    "type": "string",
                    "example": "authentication error"
                }
            }
        },
        "utils.ErrorDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "400"
                },
                "message": {
                    "type": "string",
                    "example": "bad request message"
                },
                "type": {
                    "type": "string",
                    "example": "bad request"
                }
            }
        },
        "utils.ErrorNotFound": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "404"
                },
                "message": {
                    "type": "string",
                    "example": "not found message"
                },
                "type": {
                    "type": "string",
                    "example": "not found"
                }
            }
        },
        "validator.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "validator.CreateDriverRequest": {
            "type": "object",
            "required": [
                "email",
                "license_number",
                "name",
                "password",
                "phone",
                "vehicle_plate",
                "vehicle_type"
            ],
            "properties": {
                "current_location": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "license_picture_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone": {
                    "type": "string"
                },
                "profile_picture_url": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                },
                "vehicle_plate": {
                    "type": "string"
                },
                "vehicle_type": {
                    "$ref": "#/definitions/models.VehicleType"
                }
            }
        },
        "validator.UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "validator.UpdateDriverLocationRequest": {
            "type": "object",
            "required": [
                "current_location"
            ],
            "properties": {
                "current_location": {
                    "type": "string"
                }
            }
        },
        "validator.UpdateDriverRequest": {
            "type": "object",
            "properties": {
                "current_location": {
                    "type": "string"
                },
                "license_number": {
                    "type": "string"
                },
                "license_picture_url": {
                    "type": "string"
                },
                "vehicle_plate": {
                    "type": "string"
                },
                "vehicle_type": {
                    "$ref": "#/definitions/models.VehicleType"
                }
            }
        },
        "validator.UpdateDriverStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}